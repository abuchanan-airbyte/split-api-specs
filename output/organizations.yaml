openapi: 3.0.0
info:
  title: Organizations API
  version: 1.0.0
paths:
  /v1/organizations/get:
    post:
      summary: Get an organization info
      tags:
      - organization
      operationId: getOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationIdRequestBody'
      responses:
        '200':
          description: Successfully retrieved organization info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/organizations/create:
    post:
      summary: Create an organization
      tags:
      - organization
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateRequestBody'
      responses:
        '201':
          description: Successfully created organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
  /v1/organizations/update:
    post:
      summary: Update an organization info
      tags:
      - organization
      operationId: updateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdateRequestBody'
      responses:
        '200':
          description: Successfully updated organization info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/organizations/delete:
    post:
      summary: Delete an organization
      tags:
      - organization
      operationId: deleteOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationIdRequestBody'
      responses:
        '204':
          description: Successfully deleted organization.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/organizations/list_by_user_id:
    post:
      summary: List organizations by a given user id. The function also supports searching
        by keyword and pagination.
      tags:
      - organization
      operationId: listOrganizationsByUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOrganizationsByUserRequestBody'
      responses:
        '200':
          description: Successfully retrieved organizations by given user id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationReadList'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
  /v1/organizations/get_usage:
    post:
      tags:
      - organization
      - cloud-only
      summary: Get usage for an organization
      operationId: getOrganizationUsage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUsageRequestBody'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUsageRead'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
components:
  schemas:
    ListOrganizationsByUserRequestBody:
      type: object
      required:
      - userId
      properties:
        userId:
          type: string
          format: uuid
        pagination:
          $ref: '#/components/schemas/Pagination'
        nameContains:
          type: string
    OrganizationCreateRequestBody:
      type: object
      required:
      - userId
      - organizationName
      properties:
        userId:
          type: string
          format: uuid
        organizationName:
          type: string
        email:
          type: string
    OrganizationRead:
      type: object
      required:
      - organizationId
      - organizationName
      - email
      properties:
        organizationId:
          type: string
          format: uuid
        organizationName:
          type: string
        email:
          type: string
        ssoRealm:
          type: string
        organizationLimits:
          $ref: '#/components/schemas/OrganizationLimits'
    OrganizationReadList:
      type: object
      required:
      - organizations
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationRead'
    OrganizationUpdateRequestBody:
      type: object
      required:
      - organizationId
      properties:
        organizationId:
          type: string
          format: uuid
        organizationName:
          type: string
        email:
          type: string
    OrganizationUsageRead:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/IndividualWorkspaceUsageRead'
    OrganizationUsageRequestBody:
      type: object
      required:
      - organizationId
      - timeWindow
      properties:
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
        timeWindow:
          $ref: '#/components/schemas/ConsumptionTimeWindow'
  responses: {}
