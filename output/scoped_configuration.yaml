openapi: 3.0.0
info:
  title: Scoped configuration API
  version: 1.0.0
paths:
  /v1/scoped_configuration/list:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationListRequestBody'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationListResponse'
          description: An array of scoped configurations
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      operationId: getScopedConfigurationsList
      summary: Get all scoped configurations with a given key
      tags:
      - scoped_configuration
  /v1/scoped_configuration/get_context:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationContextRequestBody'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationContextResponse'
          description: An array of scoped configurations
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      operationId: getScopedConfigurationContext
      summary: Get related configurations for a given scope
      tags:
      - scoped_configuration
  /v1/scoped_configuration/create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationCreateRequestBody'
      responses:
        '200':
          description: Newly created scoped configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationCreateResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      operationId: createScopedConfiguration
      summary: Create a new scoped configuration
      tags:
      - scoped_configuration
  /v1/scoped_configuration/get:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationReadRequestBody'
      responses:
        '200':
          description: A Scoped configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationReadResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      summary: Get a scoped configuration by ID
      operationId: getScopedConfigurationById
      tags:
      - scoped_configuration
  /v1/scoped_configuration/update:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationUpdateRequestBody'
      responses:
        '200':
          description: Updated scoped configuration object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationUpdateResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      summary: Update a scoped configuration by ID
      operationId: updateScopedConfiguration
      tags:
      - scoped_configuration
  /v1/scoped_configuration/delete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedConfigurationDeleteRequestBody'
      responses:
        '200':
          description: Deleted scoped configuration object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedConfigurationDeleteResponse'
        '422':
          $ref: '#/components/responses/InvalidInputResponse'
      summary: Delete a scoped configuration by ID
      operationId: deleteScopedConfiguration
      tags:
      - scoped_configuration
components:
  schemas:
    ScopedConfigurationContextRequestBody:
      type: object
      required:
      - config_key
      - scope_id
      - scope_type
      properties:
        config_key:
          type: string
        resource_id:
          type: string
          format: UUID
        resource_type:
          type: string
        scope_id:
          type: string
          format: UUID
        scope_type:
          type: string
    ScopedConfigurationContextResponse:
      type: object
      properties:
        activeConfiguration:
          $ref: '#/components/schemas/ScopedConfigurationRead'
        ancestorConfigurations:
          description: List of configurations that have been created that will get
            overridden by the scope currently being configured.
          type: array
          items:
            $ref: '#/components/schemas/ScopedConfigurationRead'
        descendantConfigurations:
          description: List of configurations that have been created that will override
            the scope currently being configured.
          type: array
          items:
            $ref: '#/components/schemas/ScopedConfigurationRead'
    ScopedConfigurationCreateRequestBody:
      type: object
      required:
      - value
      - config_key
      - scope_id
      - scope_type
      - origin
      - origin_type
      properties:
        value:
          type: string
        description:
          type: string
        reference_url:
          type: string
        config_key:
          type: string
        resource_id:
          type: string
        resource_type:
          type: string
        scope_id:
          type: string
        scope_type:
          type: string
        origin:
          type: string
        origin_type:
          type: string
        expires_at:
          type: string
          format: date
          x-field-extra-annotation: '@com.fasterxml.jackson.annotation.JsonFormat(pattern="yyyy-MM-dd")'
    ScopedConfigurationCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ScopedConfigurationRead'
    ScopedConfigurationDeleteRequestBody:
      type: object
      properties:
        scopedConfigurationId:
          type: string
          format: uuid
      required:
      - scopedConfigurationId
    ScopedConfigurationDeleteResponse:
      type: object
      properties:
        scopedConfigurationId:
          type: string
          format: uuid
    ScopedConfigurationListRequestBody:
      type: object
      properties:
        config_key:
          type: string
          description: Key of the configuration to filter by
    ScopedConfigurationListResponse:
      type: object
      properties:
        scopedConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ScopedConfigurationRead'
    ScopedConfigurationReadRequestBody:
      type: object
      properties:
        scopedConfigurationId:
          type: string
          format: uuid
      required:
      - scopedConfigurationId
    ScopedConfigurationReadResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ScopedConfigurationRead'
    ScopedConfigurationUpdateRequestBody:
      type: object
      required:
      - scopedConfigurationId
      - data
      properties:
        scopedConfigurationId:
          type: string
          format: uuid
        data:
          $ref: '#/components/schemas/ScopedConfigurationCreateRequestBody'
    ScopedConfigurationUpdateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ScopedConfigurationRead'
  responses: {}
